# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import agentmgmt_pb2 as agentmgmt__pb2


class AgentMgmtStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddTask = channel.unary_unary(
        '/grpc_types.AgentMgmt/AddTask',
        request_serializer=agentmgmt__pb2.AddTaskRequest.SerializeToString,
        response_deserializer=agentmgmt__pb2.AddTaskResponse.FromString,
        )
    self.GetAvailableAgents = channel.unary_unary(
        '/grpc_types.AgentMgmt/GetAvailableAgents',
        request_serializer=agentmgmt__pb2.GetAvailableAgentsRequest.SerializeToString,
        response_deserializer=agentmgmt__pb2.GetAvailableAgentsResponse.FromString,
        )
    self.GetAgentIDFromRef = channel.unary_unary(
        '/grpc_types.AgentMgmt/GetAgentIDFromRef',
        request_serializer=agentmgmt__pb2.GetAgentIDFromRefRequest.SerializeToString,
        response_deserializer=agentmgmt__pb2.GetAgentIDFromRefResponse.FromString,
        )
    self.HeartBeat = channel.unary_unary(
        '/grpc_types.AgentMgmt/HeartBeat',
        request_serializer=agentmgmt__pb2.HeartBeatRequest.SerializeToString,
        response_deserializer=agentmgmt__pb2.HeartBeatResponse.FromString,
        )
    self.AcceptCall = channel.unary_unary(
        '/grpc_types.AgentMgmt/AcceptCall',
        request_serializer=agentmgmt__pb2.AcceptCallRequest.SerializeToString,
        response_deserializer=agentmgmt__pb2.AcceptCallResponse.FromString,
        )


class AgentMgmtServicer(object):

  def AddTask(self, request, context):
    """AgentMgmt service // Go uses CamelCase so use it for API calls
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAvailableAgents(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAgentIDFromRef(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HeartBeat(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AcceptCall(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AgentMgmtServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddTask': grpc.unary_unary_rpc_method_handler(
          servicer.AddTask,
          request_deserializer=agentmgmt__pb2.AddTaskRequest.FromString,
          response_serializer=agentmgmt__pb2.AddTaskResponse.SerializeToString,
      ),
      'GetAvailableAgents': grpc.unary_unary_rpc_method_handler(
          servicer.GetAvailableAgents,
          request_deserializer=agentmgmt__pb2.GetAvailableAgentsRequest.FromString,
          response_serializer=agentmgmt__pb2.GetAvailableAgentsResponse.SerializeToString,
      ),
      'GetAgentIDFromRef': grpc.unary_unary_rpc_method_handler(
          servicer.GetAgentIDFromRef,
          request_deserializer=agentmgmt__pb2.GetAgentIDFromRefRequest.FromString,
          response_serializer=agentmgmt__pb2.GetAgentIDFromRefResponse.SerializeToString,
      ),
      'HeartBeat': grpc.unary_unary_rpc_method_handler(
          servicer.HeartBeat,
          request_deserializer=agentmgmt__pb2.HeartBeatRequest.FromString,
          response_serializer=agentmgmt__pb2.HeartBeatResponse.SerializeToString,
      ),
      'AcceptCall': grpc.unary_unary_rpc_method_handler(
          servicer.AcceptCall,
          request_deserializer=agentmgmt__pb2.AcceptCallRequest.FromString,
          response_serializer=agentmgmt__pb2.AcceptCallResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpc_types.AgentMgmt', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
