// Code generated by protoc-gen-go. DO NOT EDIT.
// source: world.proto

/*
Package grpc_types is a generated protocol buffer package.

It is generated from these files:
	world.proto

It has these top-level messages:
	WorldRequest
	WordResponse
*/
package grpc_types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorldRequest struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *WorldRequest) Reset()                    { *m = WorldRequest{} }
func (m *WorldRequest) String() string            { return proto.CompactTextString(m) }
func (*WorldRequest) ProtoMessage()               {}
func (*WorldRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WorldRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The response message containing the world greetings
type WordResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *WordResponse) Reset()                    { *m = WordResponse{} }
func (m *WordResponse) String() string            { return proto.CompactTextString(m) }
func (*WordResponse) ProtoMessage()               {}
func (*WordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WordResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*WorldRequest)(nil), "grpc_types.WorldRequest")
	proto.RegisterType((*WordResponse)(nil), "grpc_types.WordResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for World service

type WorldClient interface {
	// World service
	SayWorld(ctx context.Context, in *WorldRequest, opts ...grpc.CallOption) (*WordResponse, error)
}

type worldClient struct {
	cc *grpc.ClientConn
}

func NewWorldClient(cc *grpc.ClientConn) WorldClient {
	return &worldClient{cc}
}

func (c *worldClient) SayWorld(ctx context.Context, in *WorldRequest, opts ...grpc.CallOption) (*WordResponse, error) {
	out := new(WordResponse)
	err := grpc.Invoke(ctx, "/grpc_types.World/sayWorld", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for World service

type WorldServer interface {
	// World service
	SayWorld(context.Context, *WorldRequest) (*WordResponse, error)
}

func RegisterWorldServer(s *grpc.Server, srv WorldServer) {
	s.RegisterService(&_World_serviceDesc, srv)
}

func _World_SayWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorldRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).SayWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_types.World/SayWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).SayWorld(ctx, req.(*WorldRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _World_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_types.World",
	HandlerType: (*WorldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sayWorld",
			Handler:    _World_SayWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "world.proto",
}

func init() { proto.RegisterFile("world.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xcf, 0x2f, 0xca,
	0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4a, 0x2f, 0x2a, 0x48, 0x8e, 0x2f, 0xa9,
	0x2c, 0x48, 0x2d, 0x56, 0xd2, 0xe0, 0xe2, 0x09, 0x07, 0x49, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x50, 0x95, 0x29, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9,
	0xb8, 0x55, 0x1a, 0x79, 0x72, 0xb1, 0x82, 0xcd, 0x14, 0x72, 0xe0, 0xe2, 0x28, 0x4e, 0xac, 0x84,
	0xb0, 0x25, 0xf4, 0x10, 0xb6, 0xea, 0x21, 0x5b, 0x29, 0x85, 0x2e, 0x03, 0xb7, 0x42, 0x89, 0x21,
	0x89, 0x0d, 0xec, 0x62, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x30, 0x65, 0x67, 0xc0,
	0x00, 0x00, 0x00,
}
