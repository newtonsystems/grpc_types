// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agentmgmt.proto

/*
Package grpc_types is a generated protocol buffer package.

It is generated from these files:
	agentmgmt.proto
	globalapi.proto
	hello.proto
	world.proto

It has these top-level messages:
	AddTaskRequest
	AddTaskResponse
	GetAvailableAgentsRequest
	GetAvailableAgentsResponse
	GetAgentIDFromRefRequest
	GetAgentIDFromRefResponse
	HeartBeatRequest
	HeartBeatResponse
	AcceptCallRequest
	AcceptCallResponse
	HelloRequest
	HelloResponse
	WorldRequest
	WorldResponse
*/
package grpc_types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HeartBeatResponse_HeartBeatStatus int32

const (
	HeartBeatResponse_HEARTBEAT_SUCCESSFUL HeartBeatResponse_HeartBeatStatus = 0
	HeartBeatResponse_HEARTBEAT_FAILED     HeartBeatResponse_HeartBeatStatus = 1
)

var HeartBeatResponse_HeartBeatStatus_name = map[int32]string{
	0: "HEARTBEAT_SUCCESSFUL",
	1: "HEARTBEAT_FAILED",
}
var HeartBeatResponse_HeartBeatStatus_value = map[string]int32{
	"HEARTBEAT_SUCCESSFUL": 0,
	"HEARTBEAT_FAILED":     1,
}

func (x HeartBeatResponse_HeartBeatStatus) String() string {
	return proto.EnumName(HeartBeatResponse_HeartBeatStatus_name, int32(x))
}
func (HeartBeatResponse_HeartBeatStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

type AddTaskRequest struct {
	CustId  int32   `protobuf:"varint,1,opt,name=cust_id,json=custId" json:"cust_id,omitempty"`
	CallIds []int32 `protobuf:"varint,2,rep,packed,name=call_ids,json=callIds" json:"call_ids,omitempty"`
}

func (m *AddTaskRequest) Reset()                    { *m = AddTaskRequest{} }
func (m *AddTaskRequest) String() string            { return proto.CompactTextString(m) }
func (*AddTaskRequest) ProtoMessage()               {}
func (*AddTaskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AddTaskRequest) GetCustId() int32 {
	if m != nil {
		return m.CustId
	}
	return 0
}

func (m *AddTaskRequest) GetCallIds() []int32 {
	if m != nil {
		return m.CallIds
	}
	return nil
}

type AddTaskResponse struct {
	TaskId int32 `protobuf:"varint,1,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
}

func (m *AddTaskResponse) Reset()                    { *m = AddTaskResponse{} }
func (m *AddTaskResponse) String() string            { return proto.CompactTextString(m) }
func (*AddTaskResponse) ProtoMessage()               {}
func (*AddTaskResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddTaskResponse) GetTaskId() int32 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type GetAvailableAgentsRequest struct {
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetAvailableAgentsRequest) Reset()                    { *m = GetAvailableAgentsRequest{} }
func (m *GetAvailableAgentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAvailableAgentsRequest) ProtoMessage()               {}
func (*GetAvailableAgentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAvailableAgentsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAvailableAgentsResponse struct {
	AgentIds []string `protobuf:"bytes,1,rep,name=agent_ids,json=agentIds" json:"agent_ids,omitempty"`
}

func (m *GetAvailableAgentsResponse) Reset()                    { *m = GetAvailableAgentsResponse{} }
func (m *GetAvailableAgentsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAvailableAgentsResponse) ProtoMessage()               {}
func (*GetAvailableAgentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetAvailableAgentsResponse) GetAgentIds() []string {
	if m != nil {
		return m.AgentIds
	}
	return nil
}

type GetAgentIDFromRefRequest struct {
	RefId string `protobuf:"bytes,1,opt,name=ref_id,json=refId" json:"ref_id,omitempty"`
}

func (m *GetAgentIDFromRefRequest) Reset()                    { *m = GetAgentIDFromRefRequest{} }
func (m *GetAgentIDFromRefRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAgentIDFromRefRequest) ProtoMessage()               {}
func (*GetAgentIDFromRefRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetAgentIDFromRefRequest) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

type GetAgentIDFromRefResponse struct {
	AgentId int32 `protobuf:"varint,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
}

func (m *GetAgentIDFromRefResponse) Reset()                    { *m = GetAgentIDFromRefResponse{} }
func (m *GetAgentIDFromRefResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAgentIDFromRefResponse) ProtoMessage()               {}
func (*GetAgentIDFromRefResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetAgentIDFromRefResponse) GetAgentId() int32 {
	if m != nil {
		return m.AgentId
	}
	return 0
}

type HeartBeatRequest struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	AgentId int32  `protobuf:"varint,2,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
}

func (m *HeartBeatRequest) Reset()                    { *m = HeartBeatRequest{} }
func (m *HeartBeatRequest) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatRequest) ProtoMessage()               {}
func (*HeartBeatRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *HeartBeatRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HeartBeatRequest) GetAgentId() int32 {
	if m != nil {
		return m.AgentId
	}
	return 0
}

type HeartBeatResponse struct {
	Message string                            `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Status  HeartBeatResponse_HeartBeatStatus `protobuf:"varint,2,opt,name=status,enum=grpc_types.HeartBeatResponse_HeartBeatStatus" json:"status,omitempty"`
}

func (m *HeartBeatResponse) Reset()                    { *m = HeartBeatResponse{} }
func (m *HeartBeatResponse) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatResponse) ProtoMessage()               {}
func (*HeartBeatResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HeartBeatResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HeartBeatResponse) GetStatus() HeartBeatResponse_HeartBeatStatus {
	if m != nil {
		return m.Status
	}
	return HeartBeatResponse_HEARTBEAT_SUCCESSFUL
}

type AcceptCallRequest struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *AcceptCallRequest) Reset()                    { *m = AcceptCallRequest{} }
func (m *AcceptCallRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptCallRequest) ProtoMessage()               {}
func (*AcceptCallRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *AcceptCallRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AcceptCallResponse struct {
	Response string `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *AcceptCallResponse) Reset()                    { *m = AcceptCallResponse{} }
func (m *AcceptCallResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptCallResponse) ProtoMessage()               {}
func (*AcceptCallResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AcceptCallResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*AddTaskRequest)(nil), "grpc_types.AddTaskRequest")
	proto.RegisterType((*AddTaskResponse)(nil), "grpc_types.AddTaskResponse")
	proto.RegisterType((*GetAvailableAgentsRequest)(nil), "grpc_types.GetAvailableAgentsRequest")
	proto.RegisterType((*GetAvailableAgentsResponse)(nil), "grpc_types.GetAvailableAgentsResponse")
	proto.RegisterType((*GetAgentIDFromRefRequest)(nil), "grpc_types.GetAgentIDFromRefRequest")
	proto.RegisterType((*GetAgentIDFromRefResponse)(nil), "grpc_types.GetAgentIDFromRefResponse")
	proto.RegisterType((*HeartBeatRequest)(nil), "grpc_types.HeartBeatRequest")
	proto.RegisterType((*HeartBeatResponse)(nil), "grpc_types.HeartBeatResponse")
	proto.RegisterType((*AcceptCallRequest)(nil), "grpc_types.AcceptCallRequest")
	proto.RegisterType((*AcceptCallResponse)(nil), "grpc_types.AcceptCallResponse")
	proto.RegisterEnum("grpc_types.HeartBeatResponse_HeartBeatStatus", HeartBeatResponse_HeartBeatStatus_name, HeartBeatResponse_HeartBeatStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AgentMgmt service

type AgentMgmtClient interface {
	// AgentMgmt service // Go uses CamelCase so use it for API calls
	AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error)
	GetAvailableAgents(ctx context.Context, in *GetAvailableAgentsRequest, opts ...grpc.CallOption) (*GetAvailableAgentsResponse, error)
	GetAgentIDFromRef(ctx context.Context, in *GetAgentIDFromRefRequest, opts ...grpc.CallOption) (*GetAgentIDFromRefResponse, error)
	HeartBeat(ctx context.Context, in *HeartBeatRequest, opts ...grpc.CallOption) (*HeartBeatResponse, error)
	AcceptCall(ctx context.Context, in *AcceptCallRequest, opts ...grpc.CallOption) (*AcceptCallResponse, error)
}

type agentMgmtClient struct {
	cc *grpc.ClientConn
}

func NewAgentMgmtClient(cc *grpc.ClientConn) AgentMgmtClient {
	return &agentMgmtClient{cc}
}

func (c *agentMgmtClient) AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error) {
	out := new(AddTaskResponse)
	err := grpc.Invoke(ctx, "/grpc_types.AgentMgmt/AddTask", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentMgmtClient) GetAvailableAgents(ctx context.Context, in *GetAvailableAgentsRequest, opts ...grpc.CallOption) (*GetAvailableAgentsResponse, error) {
	out := new(GetAvailableAgentsResponse)
	err := grpc.Invoke(ctx, "/grpc_types.AgentMgmt/GetAvailableAgents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentMgmtClient) GetAgentIDFromRef(ctx context.Context, in *GetAgentIDFromRefRequest, opts ...grpc.CallOption) (*GetAgentIDFromRefResponse, error) {
	out := new(GetAgentIDFromRefResponse)
	err := grpc.Invoke(ctx, "/grpc_types.AgentMgmt/GetAgentIDFromRef", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentMgmtClient) HeartBeat(ctx context.Context, in *HeartBeatRequest, opts ...grpc.CallOption) (*HeartBeatResponse, error) {
	out := new(HeartBeatResponse)
	err := grpc.Invoke(ctx, "/grpc_types.AgentMgmt/HeartBeat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentMgmtClient) AcceptCall(ctx context.Context, in *AcceptCallRequest, opts ...grpc.CallOption) (*AcceptCallResponse, error) {
	out := new(AcceptCallResponse)
	err := grpc.Invoke(ctx, "/grpc_types.AgentMgmt/AcceptCall", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentMgmt service

type AgentMgmtServer interface {
	// AgentMgmt service // Go uses CamelCase so use it for API calls
	AddTask(context.Context, *AddTaskRequest) (*AddTaskResponse, error)
	GetAvailableAgents(context.Context, *GetAvailableAgentsRequest) (*GetAvailableAgentsResponse, error)
	GetAgentIDFromRef(context.Context, *GetAgentIDFromRefRequest) (*GetAgentIDFromRefResponse, error)
	HeartBeat(context.Context, *HeartBeatRequest) (*HeartBeatResponse, error)
	AcceptCall(context.Context, *AcceptCallRequest) (*AcceptCallResponse, error)
}

func RegisterAgentMgmtServer(s *grpc.Server, srv AgentMgmtServer) {
	s.RegisterService(&_AgentMgmt_serviceDesc, srv)
}

func _AgentMgmt_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentMgmtServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_types.AgentMgmt/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentMgmtServer).AddTask(ctx, req.(*AddTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentMgmt_GetAvailableAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAvailableAgentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentMgmtServer).GetAvailableAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_types.AgentMgmt/GetAvailableAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentMgmtServer).GetAvailableAgents(ctx, req.(*GetAvailableAgentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentMgmt_GetAgentIDFromRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentIDFromRefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentMgmtServer).GetAgentIDFromRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_types.AgentMgmt/GetAgentIDFromRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentMgmtServer).GetAgentIDFromRef(ctx, req.(*GetAgentIDFromRefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentMgmt_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartBeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentMgmtServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_types.AgentMgmt/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentMgmtServer).HeartBeat(ctx, req.(*HeartBeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentMgmt_AcceptCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentMgmtServer).AcceptCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_types.AgentMgmt/AcceptCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentMgmtServer).AcceptCall(ctx, req.(*AcceptCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentMgmt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_types.AgentMgmt",
	HandlerType: (*AgentMgmtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _AgentMgmt_AddTask_Handler,
		},
		{
			MethodName: "GetAvailableAgents",
			Handler:    _AgentMgmt_GetAvailableAgents_Handler,
		},
		{
			MethodName: "GetAgentIDFromRef",
			Handler:    _AgentMgmt_GetAgentIDFromRef_Handler,
		},
		{
			MethodName: "HeartBeat",
			Handler:    _AgentMgmt_HeartBeat_Handler,
		},
		{
			MethodName: "AcceptCall",
			Handler:    _AgentMgmt_AcceptCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agentmgmt.proto",
}

func init() { proto.RegisterFile("agentmgmt.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 486 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0x41, 0x60, 0x3c, 0x87, 0x00, 0x2b, 0xaa, 0x1a, 0xa7, 0xad, 0xd0, 0xaa, 0xa9, 0x50,
	0xa5, 0xa0, 0x26, 0x95, 0x2a, 0xf5, 0xe8, 0x80, 0x49, 0x5c, 0x25, 0x17, 0x43, 0xce, 0x68, 0xb1,
	0x07, 0xcb, 0x8a, 0x1d, 0x5c, 0xef, 0x52, 0xa9, 0xbf, 0x8c, 0xbf, 0x57, 0xd9, 0xac, 0x8d, 0xf9,
	0x2a, 0x37, 0xde, 0xce, 0xbc, 0xf7, 0x66, 0x98, 0x27, 0x43, 0x93, 0xf9, 0xf8, 0x26, 0x22, 0x3f,
	0x12, 0x83, 0x38, 0x59, 0x8a, 0x25, 0x01, 0x3f, 0x89, 0xdd, 0x99, 0xf8, 0x1b, 0x23, 0xa7, 0x23,
	0xb8, 0x34, 0x3d, 0x6f, 0xca, 0xf8, 0xab, 0x83, 0xbf, 0x57, 0xc8, 0x05, 0x79, 0x0f, 0xaa, 0xbb,
	0xe2, 0x62, 0x16, 0x78, 0xba, 0xd2, 0x53, 0xfa, 0x35, 0xa7, 0x9e, 0x42, 0xdb, 0x23, 0x5d, 0x68,
	0xb8, 0x2c, 0x0c, 0x67, 0x81, 0xc7, 0xf5, 0x8b, 0x5e, 0xb5, 0x5f, 0x73, 0xd4, 0x14, 0xdb, 0x1e,
	0xa7, 0x5f, 0xa1, 0x59, 0xa8, 0xf0, 0x78, 0xf9, 0xc6, 0x31, 0x95, 0x11, 0x8c, 0xbf, 0x96, 0x64,
	0x52, 0x68, 0x7b, 0xf4, 0x16, 0xba, 0x0f, 0x28, 0xcc, 0x3f, 0x2c, 0x08, 0xd9, 0x3c, 0x44, 0x33,
	0x1d, 0x8e, 0xe7, 0xe6, 0x1d, 0xa8, 0x85, 0x41, 0x14, 0x08, 0xc9, 0xd9, 0x00, 0xfa, 0x13, 0x8c,
	0x63, 0x14, 0xe9, 0x74, 0x05, 0x5a, 0xb6, 0x61, 0x36, 0x98, 0xd2, 0xab, 0xf6, 0x35, 0xa7, 0x91,
	0x3d, 0xa4, 0x93, 0xdd, 0x82, 0x9e, 0x52, 0x33, 0x38, 0x1a, 0x27, 0xcb, 0xc8, 0xc1, 0x45, 0x6e,
	0xf6, 0x0e, 0xea, 0x09, 0x2e, 0xf2, 0x09, 0x35, 0xa7, 0x96, 0xe0, 0xc2, 0xf6, 0xe8, 0x8f, 0xcd,
	0x80, 0x7b, 0x14, 0x69, 0xd6, 0x85, 0x46, 0x6e, 0x26, 0x67, 0x54, 0xa5, 0x17, 0x7d, 0x80, 0xd6,
	0x23, 0xb2, 0x44, 0xdc, 0x23, 0x13, 0xb9, 0x85, 0x0e, 0x6a, 0x84, 0x9c, 0x33, 0x1f, 0xa5, 0x47,
	0x0e, 0x77, 0x84, 0x2e, 0x76, 0x85, 0xd6, 0x0a, 0xb4, 0x4b, 0x4a, 0xd2, 0xf9, 0xb4, 0x94, 0x05,
	0x75, 0x2e, 0x98, 0x58, 0xf1, 0x4c, 0xe8, 0xf2, 0xee, 0x66, 0xb0, 0x3d, 0xf0, 0xe0, 0x40, 0x68,
	0xfb, 0x32, 0xc9, 0x48, 0x8e, 0x24, 0x53, 0x13, 0x9a, 0x7b, 0x25, 0xa2, 0x43, 0xe7, 0xd1, 0x32,
	0x9d, 0xe9, 0xbd, 0x65, 0x4e, 0x67, 0x93, 0x97, 0xe1, 0xd0, 0x9a, 0x4c, 0xc6, 0x2f, 0x4f, 0xad,
	0x0a, 0xe9, 0x40, 0x6b, 0x5b, 0x19, 0x9b, 0xf6, 0x93, 0x35, 0x6a, 0x29, 0xf4, 0x06, 0xda, 0xa6,
	0xeb, 0x62, 0x2c, 0x86, 0x2c, 0x0c, 0xcf, 0xfe, 0x07, 0xf4, 0x1b, 0x90, 0x72, 0xbb, 0x5c, 0xd4,
	0x80, 0x46, 0x22, 0x7f, 0x4b, 0x42, 0x81, 0xef, 0xd6, 0x55, 0xd0, 0xb2, 0xcb, 0x3c, 0xfb, 0x91,
	0x20, 0x23, 0x50, 0x65, 0xec, 0x88, 0x51, 0xde, 0x79, 0x37, 0xd1, 0xc6, 0xd5, 0xd1, 0xda, 0x46,
	0x91, 0x56, 0x08, 0x02, 0x39, 0x4c, 0x17, 0xb9, 0x2e, 0x93, 0x4e, 0x06, 0xd6, 0xf8, 0x72, 0xae,
	0xad, 0xb0, 0x99, 0x43, 0xfb, 0x20, 0x56, 0xe4, 0xf3, 0x3e, 0xfd, 0x58, 0x50, 0x8d, 0xeb, 0x33,
	0x5d, 0x85, 0xc7, 0x2f, 0xd0, 0x8a, 0x13, 0x92, 0x0f, 0x27, 0x62, 0xb0, 0xd1, 0xfc, 0xf8, 0xdf,
	0x90, 0xd0, 0x0a, 0x79, 0x06, 0xd8, 0x1e, 0x87, 0xec, 0xb4, 0x1f, 0xdc, 0xd8, 0xf8, 0x74, 0xaa,
	0x9c, 0xcb, 0xcd, 0xeb, 0xd9, 0xb7, 0xe7, 0xfb, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x87, 0xc2,
	0x4e, 0xd4, 0x8e, 0x04, 0x00, 0x00,
}
